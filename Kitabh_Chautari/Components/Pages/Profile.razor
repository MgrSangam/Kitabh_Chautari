@page "/profile"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>Profile</h3>

<!-- Main Content -->
<div class="mainContainer">
    <!-- Profile Layout -->
    <div class="profileContainer">
        <!-- User Info Section -->
        <div class="userInfoSection">
            <h4>User Information</h4>
            <div class="userDetails">
                <p><strong>Name:</strong> @userProfile.Name</p>
                <p><strong>Email:</strong> @userProfile.Email</p>
                <p><strong>Member Since:</strong> @userProfile.MemberSince.ToString("MMMM dd, yyyy")</p>
            </div>
            <button class="editProfileButton" @onclick="EditProfile">Edit Profile</button>
        </div>

        <!-- Recently Viewed Books Section -->
        <div class="recentlyViewedSection">
            <h4>Recently Viewed Books</h4>
            <div class="products-grid">
                @foreach (var book in recentlyViewedBooks)
                {
                    <NavLink href="@($"/bookdetails/{book.Id}")" class="productCard">
                        <img src="@book.ImageUrl" alt="@book.Title" />
                        <h3 class="book-title">@book.Title</h3>
                        <p class="book-author">@book.Author</p>
                        <span class="book-price">NRP @book.Price.ToString("N0")</span>
                    </NavLink>
                }
            </div>
        </div>
    </div>

    <!-- Footer -->
    <div class="footer-grid">
        <div class="footerCard">
            <h3 class="footer-title">About Us</h3>
            <p class="infoName">Debit Gurung</p>
            <p class="infoName">Tuphan Gurung</p>
            <p class="infoName">Sangam Thapa</p>
            <p class="infoName">Sujal Gurung</p>
        </div>
        <div class="footerCard">
            <h3 class="footer-title">Contact Us</h3>
            <p class="contact-title">kitab@gmail.com</p>
        </div>
        <div class="footerCard">
            <h3 class="footer-title">Join Us On</h3>
            <span class="bi bi-facebook"></span>
            <span class="bi bi-instagram"></span>
            <span class="bi bi-tiktok"></span>
            <span class="bi bi-twitter-x"></span>
        </div>
    </div>
</div>

<!-- Notification -->
<div class="notification" id="notification" style="display: none;"></div>

<style>
    .mainContainer {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        margin-top: 30px;
    }

    .profileContainer {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .userInfoSection {
        padding: 15px;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
    }

    .userDetails {
        margin-bottom: 15px;
    }

        .userDetails p {
            margin: 5px 0;
            color: #333;
        }

    .editProfileButton {
        padding: 8px 16px;
        background-color: #0066cc;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .editProfileButton:hover {
            background-color: #005bb5;
        }

    .recentlyViewedSection {
        flex: 1;
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .productCard {
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
        transition: transform 0.3s ease;
        text-decoration: none;
        color: inherit;
    }

        .productCard:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .productCard img {
            width: 100%;
            height: 300px;
            object-fit: cover;
            border-radius: 4px;
        }

    .book-title {
        font-size: 1.1rem;
        margin: 10px 0 5px 0;
    }

    .book-author {
        color: #666;
        font-size: 0.9rem;
        margin: 0 0 10px 0;
    }

    .book-price {
        font-weight: bold;
        color: #333;
        display: block;
        margin-bottom: 15px;
    }

    .footer-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 30px;
        margin-top: 50px;
        padding: 30px 0;
        border-top: 1px solid #e0e0e0;
    }

    .footer-title {
        font-size: 1.2rem;
        margin-bottom: 15px;
        color: #333;
    }

    .infoName, .contact-title {
        margin: 5px 0;
        color: #666;
    }

    .bi {
        font-size: 1.5rem;
        margin-right: 15px;
        color: #555;
        cursor: pointer;
    }

        .bi:hover {
            color: #0066cc;
        }

    .notification {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #4CAF50;
        color: white;
        padding: 15px;
        border-radius: 4px;
        z-index: 1000;
        display: none;
    }
</style>

<script>
    function showNotification(message) {
        const notification = document.getElementById('notification');
        notification.textContent = message;
        notification.style.display = 'block';
        setTimeout(() => {
            notification.style.display = 'none';
        }, 3000);
    }
</script>

@code {
    private UserProfile userProfile;
    private List<Book> recentlyViewedBooks;

    protected override void OnInitialized()
    {
        // Placeholder user data
        userProfile = new UserProfile
            {
                Name = "John Doe",
                Email = "john.doe@example.com",
                MemberSince = new DateTime(2023, 5, 15)
            };

        // Placeholder recently viewed books (subset of books from browse page)
        recentlyViewedBooks = new List<Book>
        {
            new Book { Id = 1, Title = "The Picture of Dorian Gray", Author = "Oscar Wilde", Price = 750, ImageUrl = "images/book1.jpg", Genre = "Fiction", Rating = 4.5m, Publisher = "Penguin" },
            new Book { Id = 2, Title = "Emma", Author = "Jane Austen", Price = 620, ImageUrl = "images/emma.jpg", Genre = "Romance", Rating = 4.0m, Publisher = "Oxford" },
            new Book { Id = 3, Title = "Ivanhoe", Author = "Walter Scott", Price = 680, ImageUrl = "images/scott.jpg", Genre = "Historical", Rating = 3.8m, Publisher = "Penguin" }
        };
    }

    private async Task EditProfile()
    {
        await JSRuntime.InvokeVoidAsync("showNotification", "Edit Profile functionality coming soon!");
    }

    private class UserProfile
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public DateTime MemberSince { get; set; }
    }

    private class Book
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string Author { get; set; }
        public decimal Price { get; set; }
        public string ImageUrl { get; set; }
        public string Genre { get; set; }
        public decimal Rating { get; set; }
        public string Publisher { get; set; }
    }
}