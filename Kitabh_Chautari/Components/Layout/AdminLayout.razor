@inherits LayoutComponentBase

<div class="admin-page">
    <AdminNavMenu />

    <main>
        <article class="admin-content px-4">
            @Body
        </article>
    </main>
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<script src="https://kit.fontawesome.com/yourkit.js" crossorigin="anonymous"></script>

<div class="admin-navbar-container">
    <a class="navbar-brand" href="/admin">Kitab Chautari</a>
    <nav class="admin-nav-links">
        <NavLink class="nav-link" href="/logout">
            <span class="bi bi-box-arrow-right"></span> Logout
        </NavLink>
    </nav>
</div>

<style>
    .admin-page {
        margin-top: 60px; /* Adjust based on navbar height */
    }

    .admin-navbar-container {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        background-color: #2c3e50;
        color: #ecf0f1;
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.75rem 1rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .navbar-brand {
        font-size: 1.25rem;
        font-weight: bold;
        text-decoration: none;
        color: #ecf0f1;
    }

    .admin-nav-links {
        display: flex;
        gap: 10px;
        align-items: center;
    }

    .nav-link {
        color: #ecf0f1;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .nav-link:hover,
        .nav-link.active {
            color: #ffffff;
            background-color: #34495e;
        }

    .admin-content {
        margin-left: 250px; /* Adjust based on sidebar width */
        padding: 20px;
    }

    .bi {
        margin-right: 0.5rem;
    }
</style>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    protected override void OnInitialized()
    {
        // Check if the user has admin role (placeholder logic)
        // In a real app, this would check authentication state or a role claim
        if (!IsAdmin())
        {
            NavigationManager.NavigateTo("/"); // Redirect to home if not admin
        }
    }

    private bool IsAdmin()
    {
        // Placeholder for admin role check
        // Replace with actual authentication logic (e.g., using AuthenticationStateProvider)
        return true; // Temporarily allow all users for development
    }
}